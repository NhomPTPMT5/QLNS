#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLNHANSU")]
	public partial class QLNSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChamCong(ChamCong instance);
    partial void UpdateChamCong(ChamCong instance);
    partial void DeleteChamCong(ChamCong instance);
    partial void InsertLuong(Luong instance);
    partial void UpdateLuong(Luong instance);
    partial void DeleteLuong(Luong instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhongBan(PhongBan instance);
    partial void UpdatePhongBan(PhongBan instance);
    partial void DeletePhongBan(PhongBan instance);
    partial void InsertTaikhoan(Taikhoan instance);
    partial void UpdateTaikhoan(Taikhoan instance);
    partial void DeleteTaikhoan(Taikhoan instance);
    #endregion
		
		public QLNSDataContext() : 
				base(global::DAL.Properties.Settings.Default.QLNHANSUConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public QLNSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChamCong> ChamCongs
		{
			get
			{
				return this.GetTable<ChamCong>();
			}
		}
		
		public System.Data.Linq.Table<Luong> Luongs
		{
			get
			{
				return this.GetTable<Luong>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhongBan> PhongBans
		{
			get
			{
				return this.GetTable<PhongBan>();
			}
		}
		
		public System.Data.Linq.Table<Taikhoan> Taikhoans
		{
			get
			{
				return this.GetTable<Taikhoan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChamCong")]
	public partial class ChamCong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaChamCong;
		
		private string _TenDangNhap;
		
		private System.Nullable<int> _ngay;
		
		private System.Nullable<int> _thang;
		
		private System.Nullable<int> _nam;
		
		private EntityRef<Taikhoan> _Taikhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChamCongChanging(string value);
    partial void OnMaChamCongChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnngayChanging(System.Nullable<int> value);
    partial void OnngayChanged();
    partial void OnthangChanging(System.Nullable<int> value);
    partial void OnthangChanged();
    partial void OnnamChanging(System.Nullable<int> value);
    partial void OnnamChanged();
    #endregion
		
		public ChamCong()
		{
			this._Taikhoan = default(EntityRef<Taikhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChamCong", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaChamCong
		{
			get
			{
				return this._MaChamCong;
			}
			set
			{
				if ((this._MaChamCong != value))
				{
					this.OnMaChamCongChanging(value);
					this.SendPropertyChanging();
					this._MaChamCong = value;
					this.SendPropertyChanged("MaChamCong");
					this.OnMaChamCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					if (this._Taikhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay", DbType="Int")]
		public System.Nullable<int> ngay
		{
			get
			{
				return this._ngay;
			}
			set
			{
				if ((this._ngay != value))
				{
					this.OnngayChanging(value);
					this.SendPropertyChanging();
					this._ngay = value;
					this.SendPropertyChanged("ngay");
					this.OnngayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thang", DbType="Int")]
		public System.Nullable<int> thang
		{
			get
			{
				return this._thang;
			}
			set
			{
				if ((this._thang != value))
				{
					this.OnthangChanging(value);
					this.SendPropertyChanging();
					this._thang = value;
					this.SendPropertyChanged("thang");
					this.OnthangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nam", DbType="Int")]
		public System.Nullable<int> nam
		{
			get
			{
				return this._nam;
			}
			set
			{
				if ((this._nam != value))
				{
					this.OnnamChanging(value);
					this.SendPropertyChanging();
					this._nam = value;
					this.SendPropertyChanged("nam");
					this.OnnamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taikhoan_ChamCong", Storage="_Taikhoan", ThisKey="TenDangNhap", OtherKey="TenDangNhap", IsForeignKey=true)]
		public Taikhoan Taikhoan
		{
			get
			{
				return this._Taikhoan.Entity;
			}
			set
			{
				Taikhoan previousValue = this._Taikhoan.Entity;
				if (((previousValue != value) 
							|| (this._Taikhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Taikhoan.Entity = null;
						previousValue.ChamCongs.Remove(this);
					}
					this._Taikhoan.Entity = value;
					if ((value != null))
					{
						value.ChamCongs.Add(this);
						this._TenDangNhap = value.TenDangNhap;
					}
					else
					{
						this._TenDangNhap = default(string);
					}
					this.SendPropertyChanged("Taikhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Luong")]
	public partial class Luong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLuong;
		
		private string _TenDangNhap;
		
		private string _thang;
		
		private string _nam;
		
		private string _Songaylam;
		
		private string _tongluong;
		
		private EntityRef<Taikhoan> _Taikhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLuongChanging(string value);
    partial void OnMaLuongChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnthangChanging(string value);
    partial void OnthangChanged();
    partial void OnnamChanging(string value);
    partial void OnnamChanged();
    partial void OnSongaylamChanging(string value);
    partial void OnSongaylamChanged();
    partial void OntongluongChanging(string value);
    partial void OntongluongChanged();
    #endregion
		
		public Luong()
		{
			this._Taikhoan = default(EntityRef<Taikhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLuong", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLuong
		{
			get
			{
				return this._MaLuong;
			}
			set
			{
				if ((this._MaLuong != value))
				{
					this.OnMaLuongChanging(value);
					this.SendPropertyChanging();
					this._MaLuong = value;
					this.SendPropertyChanged("MaLuong");
					this.OnMaLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					if (this._Taikhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thang", DbType="Char(10)")]
		public string thang
		{
			get
			{
				return this._thang;
			}
			set
			{
				if ((this._thang != value))
				{
					this.OnthangChanging(value);
					this.SendPropertyChanging();
					this._thang = value;
					this.SendPropertyChanged("thang");
					this.OnthangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nam", DbType="Char(10)")]
		public string nam
		{
			get
			{
				return this._nam;
			}
			set
			{
				if ((this._nam != value))
				{
					this.OnnamChanging(value);
					this.SendPropertyChanging();
					this._nam = value;
					this.SendPropertyChanged("nam");
					this.OnnamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Songaylam", DbType="Char(10)")]
		public string Songaylam
		{
			get
			{
				return this._Songaylam;
			}
			set
			{
				if ((this._Songaylam != value))
				{
					this.OnSongaylamChanging(value);
					this.SendPropertyChanging();
					this._Songaylam = value;
					this.SendPropertyChanged("Songaylam");
					this.OnSongaylamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tongluong", DbType="Char(10)")]
		public string tongluong
		{
			get
			{
				return this._tongluong;
			}
			set
			{
				if ((this._tongluong != value))
				{
					this.OntongluongChanging(value);
					this.SendPropertyChanging();
					this._tongluong = value;
					this.SendPropertyChanged("tongluong");
					this.OntongluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taikhoan_Luong", Storage="_Taikhoan", ThisKey="TenDangNhap", OtherKey="TenDangNhap", IsForeignKey=true)]
		public Taikhoan Taikhoan
		{
			get
			{
				return this._Taikhoan.Entity;
			}
			set
			{
				Taikhoan previousValue = this._Taikhoan.Entity;
				if (((previousValue != value) 
							|| (this._Taikhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Taikhoan.Entity = null;
						previousValue.Luongs.Remove(this);
					}
					this._Taikhoan.Entity = value;
					if ((value != null))
					{
						value.Luongs.Add(this);
						this._TenDangNhap = value.TenDangNhap;
					}
					else
					{
						this._TenDangNhap = default(string);
					}
					this.SendPropertyChanged("Taikhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNhanVien;
		
		private string _TenNV;
		
		private string _MaPB;
		
		private string _GioiTinh;
		
		private string _NgaySinh;
		
		private string _DienThoai;
		
		private EntitySet<Taikhoan> _Taikhoans;
		
		private EntityRef<PhongBan> _PhongBan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhanVienChanging(string value);
    partial void OnMaNhanVienChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnMaPBChanging(string value);
    partial void OnMaPBChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(string value);
    partial void OnNgaySinhChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    #endregion
		
		public NhanVien()
		{
			this._Taikhoans = new EntitySet<Taikhoan>(new Action<Taikhoan>(this.attach_Taikhoans), new Action<Taikhoan>(this.detach_Taikhoans));
			this._PhongBan = default(EntityRef<PhongBan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhanVien", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNhanVien
		{
			get
			{
				return this._MaNhanVien;
			}
			set
			{
				if ((this._MaNhanVien != value))
				{
					this.OnMaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaNhanVien = value;
					this.SendPropertyChanged("MaNhanVien");
					this.OnMaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPB", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string MaPB
		{
			get
			{
				return this._MaPB;
			}
			set
			{
				if ((this._MaPB != value))
				{
					if (this._PhongBan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPBChanging(value);
					this.SendPropertyChanging();
					this._MaPB = value;
					this.SendPropertyChanged("MaPB");
					this.OnMaPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_Taikhoan", Storage="_Taikhoans", ThisKey="MaNhanVien", OtherKey="MaNhanVien")]
		public EntitySet<Taikhoan> Taikhoans
		{
			get
			{
				return this._Taikhoans;
			}
			set
			{
				this._Taikhoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_NhanVien", Storage="_PhongBan", ThisKey="MaPB", OtherKey="MaPB", IsForeignKey=true)]
		public PhongBan PhongBan
		{
			get
			{
				return this._PhongBan.Entity;
			}
			set
			{
				PhongBan previousValue = this._PhongBan.Entity;
				if (((previousValue != value) 
							|| (this._PhongBan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongBan.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._PhongBan.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._MaPB = value.MaPB;
					}
					else
					{
						this._MaPB = default(string);
					}
					this.SendPropertyChanged("PhongBan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Taikhoans(Taikhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_Taikhoans(Taikhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhongBan")]
	public partial class PhongBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPB;
		
		private string _TenPB;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPBChanging(string value);
    partial void OnMaPBChanged();
    partial void OnTenPBChanging(string value);
    partial void OnTenPBChanged();
    #endregion
		
		public PhongBan()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPB", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPB
		{
			get
			{
				return this._MaPB;
			}
			set
			{
				if ((this._MaPB != value))
				{
					this.OnMaPBChanging(value);
					this.SendPropertyChanging();
					this._MaPB = value;
					this.SendPropertyChanged("MaPB");
					this.OnMaPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPB", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TenPB
		{
			get
			{
				return this._TenPB;
			}
			set
			{
				if ((this._TenPB != value))
				{
					this.OnTenPBChanging(value);
					this.SendPropertyChanging();
					this._TenPB = value;
					this.SendPropertyChanged("TenPB");
					this.OnTenPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_NhanVien", Storage="_NhanViens", ThisKey="MaPB", OtherKey="MaPB")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Taikhoan")]
	public partial class Taikhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNhanVien;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private string _TenQuyenHan;
		
		private EntitySet<ChamCong> _ChamCongs;
		
		private EntitySet<Luong> _Luongs;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhanVienChanging(string value);
    partial void OnMaNhanVienChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnTenQuyenHanChanging(string value);
    partial void OnTenQuyenHanChanged();
    #endregion
		
		public Taikhoan()
		{
			this._ChamCongs = new EntitySet<ChamCong>(new Action<ChamCong>(this.attach_ChamCongs), new Action<ChamCong>(this.detach_ChamCongs));
			this._Luongs = new EntitySet<Luong>(new Action<Luong>(this.attach_Luongs), new Action<Luong>(this.detach_Luongs));
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhanVien", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string MaNhanVien
		{
			get
			{
				return this._MaNhanVien;
			}
			set
			{
				if ((this._MaNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaNhanVien = value;
					this.SendPropertyChanged("MaNhanVien");
					this.OnMaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQuyenHan", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TenQuyenHan
		{
			get
			{
				return this._TenQuyenHan;
			}
			set
			{
				if ((this._TenQuyenHan != value))
				{
					this.OnTenQuyenHanChanging(value);
					this.SendPropertyChanging();
					this._TenQuyenHan = value;
					this.SendPropertyChanged("TenQuyenHan");
					this.OnTenQuyenHanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taikhoan_ChamCong", Storage="_ChamCongs", ThisKey="TenDangNhap", OtherKey="TenDangNhap")]
		public EntitySet<ChamCong> ChamCongs
		{
			get
			{
				return this._ChamCongs;
			}
			set
			{
				this._ChamCongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taikhoan_Luong", Storage="_Luongs", ThisKey="TenDangNhap", OtherKey="TenDangNhap")]
		public EntitySet<Luong> Luongs
		{
			get
			{
				return this._Luongs;
			}
			set
			{
				this._Luongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_Taikhoan", Storage="_NhanVien", ThisKey="MaNhanVien", OtherKey="MaNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.Taikhoans.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.Taikhoans.Add(this);
						this._MaNhanVien = value.MaNhanVien;
					}
					else
					{
						this._MaNhanVien = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChamCongs(ChamCong entity)
		{
			this.SendPropertyChanging();
			entity.Taikhoan = this;
		}
		
		private void detach_ChamCongs(ChamCong entity)
		{
			this.SendPropertyChanging();
			entity.Taikhoan = null;
		}
		
		private void attach_Luongs(Luong entity)
		{
			this.SendPropertyChanging();
			entity.Taikhoan = this;
		}
		
		private void detach_Luongs(Luong entity)
		{
			this.SendPropertyChanging();
			entity.Taikhoan = null;
		}
	}
}
#pragma warning restore 1591
